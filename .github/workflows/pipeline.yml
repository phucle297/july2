name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  check_secrets:
    name: Check secrets
    runs-on: ubuntu-latest

    steps:
      - name: Check secrets
        run: |
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "DOCKERHUB_USERNAME is not set"
            exit 1
          fi

          if [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "DOCKERHUB_TOKEN is not set"
            exit 1
          fi

          if [ -z "${{ secrets.SERVER_HOST }}" ]; then
            echo "SERVER_HOST is not set"
            exit 1
          fi

          if [ -z "${{ secrets.SERVER_USER }}" ]; then
            echo "SERVER_USER is not set"
            exit 1
          fi

          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "SSH_PRIVATE_KEY is not set"
            exit 1
          fi
  build:
    needs: check_secrets
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: checkout master
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        run: |
          docker build -t july .

      - name: Push image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/july:${{ github.sha }}

          # name: fe-user pipeline

          # on:
          #   push:
          #     branches:
          #       - master

          # jobs:
          #   build:
          #     name: Build and
          #     runs-on: ubuntu-latest
          #     strategy:
          #       matrix:
          #         node-version: [20]
          #     steps:
          #       - uses: actions/checkout@v3
          #       - uses: pnpm/action-setup@v3
          #         with:
          #           version: 8
          #       - name: Use Node.js ${{ matrix.node-version }}
          #         uses: actions/setup-node@v3
          #         with:
          #           node-version: ${{ matrix.node-version }}
          #           cache: "pnpm"
          #           cache-dependency-path: "./apps/fe-user/package.json"

          #       - name: Build apps/fe-user
          #         run: |
          #           pnpm install --frozen-lockfile --ignore-scripts
          #           pnpm --filter="fe-user" build

          #       - name: Archive production artifacts
          #         uses: actions/upload-artifact@v4
          #         with:
          #           name: fe-user
          #           path: apps/fe-user/dist

          #   deploy:
          #     name: Deploy to S3
          #     needs: build
          #     runs-on: ubuntu-latest

          #     steps:
          #       - name: Download production artifacts
          #         uses: actions/download-artifact@v4
          #         with:
          #           name: fe-user

          #       - name: Configure AWS Credentials
          #         uses: aws-actions/configure-aws-credentials@v4
          #         with:
          #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          #           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #           aws-region: ap-southeast-1

          #       - name: Deploy to S3
          #         env:
          #           CLOUDFRONT_ID: ${{ secrets.CLOUDFRONT_ID }}
          #         run: |
          #           aws s3 rm s3://www.weeb.wiki --recursive --only-show-errors
          #           aws s3 cp . s3://www.weeb.wiki --recursive --only-show-errors --cache-control max-age=180
          #           aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
